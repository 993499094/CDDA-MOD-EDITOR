/*! For license information please see index.js.LICENSE.txt */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("blockly/core"));else if("function"==typeof define&&define.amd)define(["blockly/core"],e);else{var n="object"==typeof exports?e(require("blockly/core")):e(t.Blockly);for(var i in n)("object"==typeof exports?exports:t)[i]=n[i]}}(this,(t=>(()=>{"use strict";var e={573:e=>{e.exports=t}},n={};function i(t){var o=n[t];if(void 0!==o)return o.exports;var s=n[t]={exports:{}};return e[t](s,s.exports,i),s.exports}i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{i.r(o),i.d(o,{InlineRenderer:()=>n,addInlineRowSeparators:()=>e,overrideOldBlockDefinitions:()=>p});var t=i(573);function e(e,n){class i extends n{shouldStartNewRow_(e,n){return(null==n?void 0:n.type)===t.inputTypes.DUMMY||super.shouldStartNewRow_(e,n)}}return class extends e{makeRenderInfo_(t){return new i(this,t)}}}const n=e(t.thrasos.Renderer,t.thrasos.RenderInfo);t.blockRendering.register("thrasos-inline-row-separators",n),t.defineBlocksWithJsonArray([{type:"inline_text_join",message0:"",output:"String",style:"text_blocks",helpUrl:"%{BKY_TEXT_JOIN_HELPURL}",tooltip:"%{BKY_TEXT_JOIN_TOOLTIP}",mutator:"text_join_mutator",extensions:["inline_text_join_extension"]}]),t.Extensions.register("inline_text_join_extension",(function(){this.inputsInline=!0,this.updateShape_=function(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField(this.newQuote_(!0)).appendField(this.newQuote_(!1));for(let e=0;e<this.itemCount_;e++)if(this.getInput("ADD"+e)&&!this.getInput("DUMMY"+e)&&this.removeInput("ADD"+e),!this.getInput("ADD"+e)){const n=this.appendDummyInput("DUMMY"+e);0===e&&n.appendField(t.Msg.TEXT_JOIN_TITLE_CREATEWITH),this.appendValueInput("ADD"+e).setAlign(t.Input.Align.LEFT)}for(let t=this.itemCount_;this.getInput("ADD"+t);t++)this.removeInput("DUMMY"+t),this.removeInput("ADD"+t)},this.updateShape_()}));const s=t.Blocks.lists_create_with;t.Blocks.inline_lists_create_with=Object.assign({},s,{init:function(){s.init.apply(this),this.inputsInline=!0},updateShape_:function(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField(t.Msg.LISTS_CREATE_EMPTY_TITLE);for(let e=0;e<this.itemCount_;e++)if(!this.getInput("ADD"+e)){const n=this.appendDummyInput("DUMMY"+e);0===e&&n.appendField(t.Msg.LISTS_CREATE_WITH_INPUT_WITH),this.appendValueInput("ADD"+e).setAlign(t.Input.Align.LEFT)}for(let t=this.itemCount_;this.getInput("ADD"+t);t++)this.removeInput("DUMMY"+t),this.removeInput("ADD"+t)}});const r=t.Blocks.procedures_defreturn;t.Blocks.inline_procedures_defreturn=Object.assign({},r,{init:function(){var e;r.init.apply(this),this.inputsInline=!0,null===(e=this.getInput("RETURN"))||void 0===e||e.setAlign(t.Input.Align.LEFT)}});const p=function(){t.Blocks.text_join=t.Blocks.inline_text_join,t.Blocks.lists_create_with=t.Blocks.inline_lists_create_with,t.Blocks.procedures_defreturn=t.Blocks.inline_procedures_defreturn}})(),o})()));
//# sourceMappingURL=index.js.map