/**
 * @license
 * Copyright 2022 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * @fileoverview Defines a renderer that renders dummy inputs like line breaks.
 */
import * as Blockly from 'blockly/core';
declare type RendererConstructor = new (...args: any[]) => Blockly.blockRendering.Renderer;
declare type RenderInfoConstructor = new (...args: any[]) => Blockly.blockRendering.RenderInfo;
/**
 * This function creates a new Blockly Renderer that is based on the provided
 * Renderer but it always enforces that any input connector following a dummy
 * input will be rendered on a new row.
 *
 * @param rendererBase A class extending Blockly.blockRendering.Renderer that
 *     the new renderer will be derived from.
 * @param renderInfoBase A class extending Blockly.blockRendering.RenderInfo
 *     that should be compatible with the provided rendererBase.
 * @returns The new renderer class. It's up to you to register it with Blockly.
 */
export declare function addInlineRowSeparators<RendererBase extends RendererConstructor, RenderInfoBase extends RenderInfoConstructor>(rendererBase: RendererBase, renderInfoBase: RenderInfoBase): RendererBase;
export declare const InlineRenderer: typeof Blockly.thrasos.Renderer;
export {};
//# sourceMappingURL=inline_row_separators_renderer.d.ts.map